name: Main

on:
  push:
    branches: ["main"]
  pull_request: # TODO remove this line after testing
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write # Write is required to create/update releases
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate version based on date
        run: echo "RELEASE_VERSION=$(date '+%Y-%m-%d_%H-%M')" >> $GITHUB_ENV

      # - name: Log in to the Container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
      #     build-args: |
      #       APP_VERSION=${{ env.RELEASE_VERSION }}

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        id: "tag_create"
        with:
          tag: ${{ env.RELEASE_VERSION }}

      - name: Get pending release
        uses: joutvhu/get-release@v1
        id: get_pending_release
        with:
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest release
        uses: joutvhu/get-release@v1
        id: get_latest_release
        with:
          latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete existing pending release
        uses: actions/github-script@v7
        if: steps.get_pending_release.outputs.id != ''
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            await github.repos.deleteRelease({ owner, repo, release_id: ${{ steps.get_pending_release.outputs.id }} });

      - name: Create pending release
        uses: softprops/action-gh-release@v1
        if: steps.get_pending_release.outputs.id == ''
        with:
          prerelease: true
          tag_name: ${{ env.RELEASE_VERSION }}
          generate_release_notes: true
